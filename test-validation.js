const axios = require('axios');

async function testValidation() {
  try {
    console.log('üß™ Testando valida√ß√£o autom√°tica...\n');

    // Teste 1: Email inv√°lido no signup
    console.log('1. Testando email inv√°lido no signup...');
    try {
      await axios.post('http://localhost:3000/api/v1/auth/signup', {
        username: 'testuser',
        email: 'email-invalido',
        password: 'Test123!'
      });
      console.log('‚ùå ERRO: Email inv√°lido foi aceito!');
    } catch (error) {
      if (error.response?.status === 400) {
        console.log('‚úÖ Email inv√°lido rejeitado corretamente');
        console.log('   Resposta:', error.response.data);
      } else {
        console.log('‚ùå Erro inesperado:', error.message);
      }
    }

    // Teste 2: Senha fraca no signup
    console.log('\n2. Testando senha fraca no signup...');
    try {
      await axios.post('http://localhost:3000/api/v1/auth/signup', {
        username: 'testuser',
        email: 'test@example.com',
        password: '123'
      });
      console.log('‚ùå ERRO: Senha fraca foi aceita!');
    } catch (error) {
      if (error.response?.status === 400) {
        console.log('‚úÖ Senha fraca rejeitada corretamente');
        console.log('   Resposta:', error.response.data);
      } else {
        console.log('‚ùå Erro inesperado:', error.message);
      }
    }

    // Teste 3: T√≠tulo muito curto na cria√ß√£o de idea
    console.log('\n3. Testando t√≠tulo muito curto na cria√ß√£o de idea...');
    try {
      await axios.post('http://localhost:3000/api/v1/ideas', {
        title: 'Curto',
        description: 'Esta √© uma descri√ß√£o muito longa que deve passar na valida√ß√£o porque tem mais de 50 caracteres e menos de 700 caracteres como exigido pelo schema de valida√ß√£o.'
      }, {
        headers: {
          'Authorization': 'Bearer fake-token'
        }
      });
      console.log('‚ùå ERRO: T√≠tulo curto foi aceito!');
    } catch (error) {
      if (error.response?.status === 400) {
        console.log('‚úÖ T√≠tulo curto rejeitado corretamente');
        console.log('   Resposta:', error.response.data);
      } else {
        console.log('‚ùå Erro inesperado:', error.message);
      }
    }

    // Teste 4: URL inv√°lida em link pessoal
    console.log('\n4. Testando URL inv√°lida em link pessoal...');
    try {
      await axios.post('http://localhost:3000/api/v1/users/links', {
        url: 'url-invalida'
      }, {
        headers: {
          'Authorization': 'Bearer fake-token'
        }
      });
      console.log('‚ùå ERRO: URL inv√°lida foi aceita!');
    } catch (error) {
      if (error.response?.status === 400) {
        console.log('‚úÖ URL inv√°lida rejeitada corretamente');
        console.log('   Resposta:', error.response.data);
      } else {
        console.log('‚ùå Erro inesperado:', error.message);
      }
    }

    console.log('\nüéâ Testes de valida√ß√£o conclu√≠dos!');

  } catch (error) {
    console.error('‚ùå Erro geral:', error.message);
  }
}

testValidation();
