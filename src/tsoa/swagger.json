{
	"openapi": "3.0.0",
	"components": {
		"examples": {},
		"headers": {},
		"parameters": {},
		"requestBodies": {},
		"responses": {},
		"schemas": {
			"AuthInput": {
				"properties": {
					"username": {
						"type": "string"
					},
					"password": {
						"type": "string"
					},
					"email": {
						"type": "string"
					}
				},
				"required": [
					"username",
					"password",
					"email"
				],
				"type": "object"
			},
			"Pick_AuthInput.email-or-password_": {
				"properties": {
					"email": {
						"type": "string"
					},
					"password": {
						"type": "string"
					}
				},
				"required": [
					"email",
					"password"
				],
				"type": "object",
				"description": "From T, pick a set of properties whose keys are in the union K"
			}
		},
		"securitySchemes": {
			"jwt": {
				"type": "http",
				"scheme": "bearer"
			}
		}
	},
	"info": {
		"title": "",
		"contact": {}
	},
	"paths": {
		"/api/v1/user": {
			"get": {
				"operationId": "FindAll",
				"responses": {
					"200": {
						"description": "",
						"content": {
							"application/json": {
								"schema": {
									"properties": {
										"data": {
											"items": {},
											"type": "array"
										},
										"total": {
											"type": "number",
											"format": "double"
										},
										"pages": {
											"type": "number",
											"format": "double"
										},
										"nextPage": {
											"type": "number",
											"format": "double"
										},
										"page": {
											"type": "number",
											"format": "double"
										}
									},
									"required": [
										"data",
										"total",
										"pages",
										"nextPage",
										"page"
									],
									"type": "object"
								}
							}
						}
					}
				},
				"description": "Verify if exists an user with the email in the system",
				"tags": [
					"User"
				],
				"security": [
					{
						"jwt": []
					}
				],
				"parameters": [
					{
						"in": "query",
						"name": "search",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "page",
						"required": true,
						"schema": {
							"format": "double",
							"type": "number"
						}
					},
					{
						"in": "query",
						"name": "quantity",
						"required": true,
						"schema": {
							"format": "double",
							"type": "number"
						}
					}
				]
			},
			"patch": {
				"operationId": "Update",
				"responses": {
					"200": {
						"description": "",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					}
				},
				"description": "Update the user in the system",
				"tags": [
					"User"
				],
				"security": [
					{
						"jwt": []
					}
				],
				"parameters": [],
				"requestBody": {
					"required": false,
					"content": {
						"multipart/form-data": {
							"schema": {
								"type": "object",
								"properties": {
									"username": {
										"type": "string"
									},
									"email": {
										"type": "string"
									},
									"displayName": {
										"type": "string"
									},
									"autobiography": {
										"type": "string"
									},
									"links": {
										"type": "string"
									},
									"password": {
										"type": "string"
									},
									"backgroundImage": {
										"type": "string",
										"format": "binary"
									},
									"icon": {
										"type": "string",
										"format": "binary"
									}
								}
							}
						}
					}
				}
			},
			"delete": {
				"operationId": "Delete",
				"responses": {
					"204": {
						"description": ""
					}
				},
				"description": "Delete the user of the system",
				"tags": [
					"User"
				],
				"security": [
					{
						"jwt": []
					}
				],
				"parameters": []
			}
		},
		"/api/v1/user/{id}": {
			"get": {
				"operationId": "FindByUserProfileId",
				"responses": {
					"200": {
						"description": "",
						"content": {
							"application/json": {
								"schema": {
									"anyOf": [
										{
											"properties": {
												"userProfile": {
													"properties": {
														"followingCount": {
															"type": "number",
															"format": "double"
														},
														"followersCount": {
															"type": "number",
															"format": "double"
														},
														"links": {
															"items": {
																"properties": {
																	"postId": {
																		"type": "string"
																	},
																	"url": {
																		"type": "string"
																	},
																	"userProfileId": {
																		"type": "string"
																	},
																	"id": {
																		"type": "string"
																	}
																},
																"required": [
																	"postId",
																	"url",
																	"userProfileId",
																	"id"
																],
																"type": "object"
															},
															"type": "array"
														},
														"backgroundImage": {
															"type": "string"
														},
														"autobiography": {
															"type": "string"
														},
														"displayName": {
															"type": "string"
														},
														"icon": {
															"type": "string"
														},
														"id": {
															"type": "string"
														}
													},
													"required": [
														"followingCount",
														"followersCount",
														"links",
														"backgroundImage",
														"autobiography",
														"displayName",
														"icon",
														"id"
													],
													"type": "object"
												},
												"created_at": {
													"type": "string"
												},
												"verified": {
													"type": "boolean"
												},
												"email": {
													"type": "string"
												},
												"username": {
													"type": "string"
												},
												"id": {
													"type": "string"
												}
											},
											"required": [
												"userProfile",
												"created_at",
												"verified",
												"email",
												"username",
												"id"
											],
											"type": "object"
										},
										{
											"type": "string",
											"enum": [
												"USER_NOT_FOUND"
											]
										}
									]
								}
							}
						}
					}
				},
				"description": "Get user by id",
				"tags": [
					"User"
				],
				"security": [
					{
						"jwt": []
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "id",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/api/v1/user/data": {
			"get": {
				"operationId": "FindByToken",
				"responses": {
					"200": {
						"description": "",
						"content": {
							"application/json": {
								"schema": {
									"anyOf": [
										{
											"properties": {
												"userProfile": {
													"properties": {
														"followingCount": {
															"type": "number",
															"format": "double"
														},
														"followersCount": {
															"type": "number",
															"format": "double"
														},
														"links": {
															"items": {
																"properties": {
																	"postId": {
																		"type": "string"
																	},
																	"url": {
																		"type": "string"
																	},
																	"userProfileId": {
																		"type": "string"
																	},
																	"id": {
																		"type": "string"
																	}
																},
																"required": [
																	"postId",
																	"url",
																	"userProfileId",
																	"id"
																],
																"type": "object"
															},
															"type": "array"
														},
														"backgroundImage": {
															"type": "string"
														},
														"autobiography": {
															"type": "string"
														},
														"displayName": {
															"type": "string"
														},
														"icon": {
															"type": "string"
														},
														"id": {
															"type": "string"
														}
													},
													"required": [
														"followingCount",
														"followersCount",
														"links",
														"backgroundImage",
														"autobiography",
														"displayName",
														"icon",
														"id"
													],
													"type": "object"
												},
												"created_at": {
													"type": "string"
												},
												"verified": {
													"type": "boolean"
												},
												"email": {
													"type": "string"
												},
												"username": {
													"type": "string"
												},
												"id": {
													"type": "string"
												}
											},
											"required": [
												"userProfile",
												"created_at",
												"verified",
												"email",
												"username",
												"id"
											],
											"type": "object"
										},
										{
											"type": "string",
											"enum": [
												"USER_NOT_FOUND"
											]
										}
									]
								}
							}
						}
					}
				},
				"description": "Get data from an user of the system",
				"tags": [
					"User"
				],
				"security": [
					{
						"jwt": []
					}
				],
				"parameters": []
			}
		},
		"/api/v1/user/exists/{email}": {
			"get": {
				"operationId": "Get",
				"responses": {
					"200": {
						"description": "",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					}
				},
				"description": "Verify if exists an user with the email in the system",
				"tags": [
					"User"
				],
				"security": [],
				"parameters": [
					{
						"in": "path",
						"name": "email",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/api/v1/post": {
			"post": {
				"operationId": "CreatePost",
				"responses": {
					"200": {
						"description": "",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					}
				},
				"description": "Create a post in the system",
				"tags": [
					"Post"
				],
				"security": [
					{
						"jwt": []
					}
				],
				"parameters": [],
				"requestBody": {
					"required": false,
					"content": {
						"multipart/form-data": {
							"schema": {
								"type": "object",
								"properties": {
									"title": {
										"type": "string"
									},
									"content": {
										"type": "string"
									},
									"links": {
										"type": "string"
									},
									"event": {
										"type": "string"
									},
									"tags": {
										"type": "string"
									},
									"images": {
										"items": {
											"type": "string",
											"format": "binary"
										},
										"type": "array"
									}
								}
							}
						}
					}
				}
			},
			"patch": {
				"operationId": "UpdatePost",
				"responses": {
					"200": {
						"description": "",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					}
				},
				"description": "Update a post in the system",
				"tags": [
					"Post"
				],
				"security": [
					{
						"jwt": []
					}
				],
				"parameters": [
					{
						"in": "query",
						"name": "postId",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"required": false,
					"content": {
						"multipart/form-data": {
							"schema": {
								"type": "object",
								"properties": {
									"title": {
										"type": "string"
									},
									"content": {
										"type": "string"
									},
									"links": {
										"type": "string"
									},
									"event": {
										"type": "string"
									},
									"tags": {
										"type": "string"
									},
									"images": {
										"items": {
											"type": "string",
											"format": "binary"
										},
										"type": "array"
									}
								}
							}
						}
					}
				}
			},
			"get": {
				"operationId": "FindAllPosts",
				"responses": {
					"200": {
						"description": "",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					}
				},
				"description": "Find all posts of an user",
				"tags": [
					"Post"
				],
				"security": [
					{
						"jwt": []
					}
				],
				"parameters": [
					{
						"in": "query",
						"name": "tab",
						"required": true,
						"schema": {
							"type": "string",
							"enum": [
								"following",
								"recommendations",
								"highlights"
							]
						}
					},
					{
						"in": "query",
						"name": "since",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "page",
						"required": true,
						"schema": {
							"format": "double",
							"type": "number"
						}
					},
					{
						"in": "query",
						"name": "quantity",
						"required": true,
						"schema": {
							"format": "double",
							"type": "number"
						}
					},
					{
						"in": "query",
						"name": "authorId",
						"required": false,
						"schema": {
							"type": "string"
						}
					}
				]
			},
			"delete": {
				"operationId": "DeletePost",
				"responses": {
					"200": {
						"description": "",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					}
				},
				"description": "Delete a post of an user",
				"tags": [
					"Post"
				],
				"security": [
					{
						"jwt": []
					}
				],
				"parameters": [
					{
						"in": "query",
						"name": "postId",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/api/v1/post/{postId}": {
			"get": {
				"operationId": "FindPostById",
				"responses": {
					"200": {
						"description": "",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					}
				},
				"description": "Find a post of an user",
				"tags": [
					"Post"
				],
				"security": [
					{
						"jwt": []
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "postId",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/api/v1/like/post": {
			"get": {
				"operationId": "LikePost",
				"responses": {
					"200": {
						"description": "",
						"content": {
							"application/json": {
								"schema": {
									"properties": {
										"commentId": {
											"type": "string"
										},
										"postId": {
											"type": "string"
										},
										"userProfileId": {
											"type": "string"
										},
										"created_at": {
											"type": "string",
											"format": "date-time"
										},
										"id": {
											"type": "string"
										}
									},
									"required": [
										"commentId",
										"postId",
										"userProfileId",
										"created_at",
										"id"
									],
									"type": "object"
								}
							}
						}
					}
				},
				"description": "Like or unlike a post of an user",
				"tags": [
					"Like"
				],
				"security": [
					{
						"jwt": []
					}
				],
				"parameters": [
					{
						"in": "query",
						"name": "isLiked",
						"required": true,
						"schema": {
							"type": "boolean"
						}
					},
					{
						"in": "query",
						"name": "postId",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/api/v1/like/comment": {
			"get": {
				"operationId": "LikeComment",
				"responses": {
					"200": {
						"description": "",
						"content": {
							"application/json": {
								"schema": {
									"properties": {
										"commentId": {
											"type": "string"
										},
										"postId": {
											"type": "string"
										},
										"userProfileId": {
											"type": "string"
										},
										"created_at": {
											"type": "string",
											"format": "date-time"
										},
										"id": {
											"type": "string"
										}
									},
									"required": [
										"commentId",
										"postId",
										"userProfileId",
										"created_at",
										"id"
									],
									"type": "object"
								}
							}
						}
					}
				},
				"description": "Like or unlike a comment of an user",
				"tags": [
					"Like"
				],
				"security": [
					{
						"jwt": []
					}
				],
				"parameters": [
					{
						"in": "query",
						"name": "isLiked",
						"required": true,
						"schema": {
							"type": "boolean"
						}
					},
					{
						"in": "query",
						"name": "commentId",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/api/v1/comment": {
			"post": {
				"operationId": "CommentPost",
				"responses": {
					"200": {
						"description": "",
						"content": {
							"application/json": {
								"schema": {
									"properties": {
										"parentCommentId": {
											"type": "string"
										},
										"authorId": {
											"type": "string"
										},
										"content": {
											"type": "string"
										},
										"postId": {
											"type": "string"
										},
										"updated_at": {
											"type": "string",
											"format": "date-time"
										},
										"created_at": {
											"type": "string",
											"format": "date-time"
										},
										"id": {
											"type": "string"
										},
										"_count": {
											"properties": {
												"replies": {
													"type": "number",
													"format": "double"
												},
												"likes": {
													"type": "number",
													"format": "double"
												}
											},
											"required": [
												"replies",
												"likes"
											],
											"type": "object"
										},
										"repliesCount": {
											"type": "number",
											"format": "double"
										},
										"likesCount": {
											"type": "number",
											"format": "double"
										},
										"isLiked": {
											"type": "boolean"
										},
										"author": {
											"properties": {
												"user": {
													"properties": {
														"created_at": {
															"type": "string"
														},
														"verified": {
															"type": "boolean"
														},
														"email": {
															"type": "string"
														},
														"username": {
															"type": "string"
														},
														"id": {
															"type": "string"
														}
													},
													"required": [
														"created_at",
														"verified",
														"email",
														"username",
														"id"
													],
													"type": "object"
												},
												"links": {
													"items": {
														"properties": {
															"postId": {
																"type": "string"
															},
															"url": {
																"type": "string"
															},
															"userProfileId": {
																"type": "string"
															},
															"id": {
																"type": "string"
															}
														},
														"required": [
															"postId",
															"url",
															"userProfileId",
															"id"
														],
														"type": "object"
													},
													"type": "array"
												},
												"backgroundImage": {
													"type": "string"
												},
												"autobiography": {
													"type": "string"
												},
												"displayName": {
													"type": "string"
												},
												"icon": {
													"type": "string"
												},
												"id": {
													"type": "string"
												}
											},
											"required": [
												"user",
												"links",
												"backgroundImage",
												"autobiography",
												"displayName",
												"icon",
												"id"
											],
											"type": "object"
										}
									},
									"required": [
										"parentCommentId",
										"authorId",
										"content",
										"postId",
										"updated_at",
										"created_at",
										"id",
										"_count",
										"repliesCount",
										"likesCount",
										"isLiked",
										"author"
									],
									"type": "object"
								}
							}
						}
					}
				},
				"description": "Comment in a post or in a comment",
				"tags": [
					"Comment"
				],
				"security": [
					{
						"jwt": []
					}
				],
				"parameters": [
					{
						"in": "query",
						"name": "postId",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "commentId",
						"required": false,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"properties": {
									"content": {
										"type": "string"
									}
								},
								"required": [
									"content"
								],
								"type": "object"
							}
						}
					}
				}
			},
			"get": {
				"operationId": "ListComments",
				"responses": {
					"200": {
						"description": "",
						"content": {
							"application/json": {
								"schema": {
									"properties": {
										"data": {
											"items": {
												"properties": {
													"parentCommentId": {
														"type": "string"
													},
													"authorId": {
														"type": "string"
													},
													"content": {
														"type": "string"
													},
													"postId": {
														"type": "string"
													},
													"updated_at": {
														"type": "string",
														"format": "date-time"
													},
													"created_at": {
														"type": "string",
														"format": "date-time"
													},
													"id": {
														"type": "string"
													},
													"_count": {
														"properties": {
															"replies": {
																"type": "number",
																"format": "double"
															},
															"likes": {
																"type": "number",
																"format": "double"
															}
														},
														"required": [
															"replies",
															"likes"
														],
														"type": "object"
													},
													"repliesCount": {
														"type": "number",
														"format": "double"
													},
													"likesCount": {
														"type": "number",
														"format": "double"
													},
													"isLiked": {
														"type": "boolean"
													},
													"author": {
														"properties": {
															"user": {
																"properties": {
																	"created_at": {
																		"type": "string"
																	},
																	"verified": {
																		"type": "boolean"
																	},
																	"email": {
																		"type": "string"
																	},
																	"username": {
																		"type": "string"
																	},
																	"id": {
																		"type": "string"
																	}
																},
																"required": [
																	"created_at",
																	"verified",
																	"email",
																	"username",
																	"id"
																],
																"type": "object"
															},
															"links": {
																"items": {
																	"properties": {
																		"postId": {
																			"type": "string"
																		},
																		"url": {
																			"type": "string"
																		},
																		"userProfileId": {
																			"type": "string"
																		},
																		"id": {
																			"type": "string"
																		}
																	},
																	"required": [
																		"postId",
																		"url",
																		"userProfileId",
																		"id"
																	],
																	"type": "object"
																},
																"type": "array"
															},
															"backgroundImage": {
																"type": "string"
															},
															"autobiography": {
																"type": "string"
															},
															"displayName": {
																"type": "string"
															},
															"icon": {
																"type": "string"
															},
															"id": {
																"type": "string"
															}
														},
														"required": [
															"user",
															"links",
															"backgroundImage",
															"autobiography",
															"displayName",
															"icon",
															"id"
														],
														"type": "object"
													}
												},
												"required": [
													"parentCommentId",
													"authorId",
													"content",
													"postId",
													"updated_at",
													"created_at",
													"id",
													"_count",
													"repliesCount",
													"likesCount",
													"isLiked",
													"author"
												],
												"type": "object"
											},
											"type": "array"
										},
										"total": {
											"type": "number",
											"format": "double"
										},
										"pages": {
											"type": "number",
											"format": "double"
										},
										"nextPage": {
											"type": "number",
											"format": "double"
										},
										"page": {
											"type": "number",
											"format": "double"
										}
									},
									"required": [
										"data",
										"total",
										"pages",
										"nextPage",
										"page"
									],
									"type": "object"
								}
							}
						}
					}
				},
				"description": "List comments of a post or replies of a comment",
				"tags": [
					"Comment"
				],
				"security": [
					{
						"jwt": []
					}
				],
				"parameters": [
					{
						"in": "query",
						"name": "page",
						"required": true,
						"schema": {
							"format": "double",
							"type": "number"
						}
					},
					{
						"in": "query",
						"name": "quantity",
						"required": true,
						"schema": {
							"format": "double",
							"type": "number"
						}
					},
					{
						"in": "query",
						"name": "since",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "postId",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "commentId",
						"required": false,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/api/v1/comment/{commentId}": {
			"get": {
				"operationId": "FindCommentById",
				"responses": {
					"200": {
						"description": "",
						"content": {
							"application/json": {
								"schema": {
									"anyOf": [
										{
											"allOf": [
												{
													"properties": {
														"likes": {
															"items": {
																"properties": {
																	"commentId": {
																		"type": "string"
																	},
																	"postId": {
																		"type": "string"
																	},
																	"userProfileId": {
																		"type": "string"
																	},
																	"created_at": {
																		"type": "string",
																		"format": "date-time"
																	},
																	"id": {
																		"type": "string"
																	}
																},
																"required": [
																	"commentId",
																	"postId",
																	"userProfileId",
																	"created_at",
																	"id"
																],
																"type": "object"
															},
															"type": "array"
														},
														"author": {
															"allOf": [
																{
																	"properties": {
																		"links": {
																			"items": {
																				"properties": {
																					"postId": {
																						"type": "string"
																					},
																					"url": {
																						"type": "string"
																					},
																					"userProfileId": {
																						"type": "string"
																					},
																					"id": {
																						"type": "string"
																					}
																				},
																				"required": [
																					"postId",
																					"url",
																					"userProfileId",
																					"id"
																				],
																				"type": "object"
																			},
																			"type": "array"
																		},
																		"user": {
																			"properties": {
																				"refreshTokenId": {
																					"type": "string"
																				},
																				"userProfileId": {
																					"type": "string"
																				},
																				"userCodeId": {
																					"type": "string"
																				},
																				"blockedUntil": {
																					"type": "string",
																					"format": "date-time"
																				},
																				"loginAttempts": {
																					"type": "number",
																					"format": "double"
																				},
																				"verified": {
																					"type": "boolean"
																				},
																				"password": {
																					"type": "string"
																				},
																				"email": {
																					"type": "string"
																				},
																				"updated_at": {
																					"type": "string",
																					"format": "date-time"
																				},
																				"created_at": {
																					"type": "string",
																					"format": "date-time"
																				},
																				"id": {
																					"type": "string"
																				},
																				"username": {
																					"type": "string"
																				}
																			},
																			"required": [
																				"refreshTokenId",
																				"userProfileId",
																				"userCodeId",
																				"blockedUntil",
																				"loginAttempts",
																				"verified",
																				"password",
																				"email",
																				"updated_at",
																				"created_at",
																				"id",
																				"username"
																			],
																			"type": "object"
																		}
																	},
																	"required": [
																		"links",
																		"user"
																	],
																	"type": "object"
																},
																{
																	"properties": {
																		"updated_at": {
																			"type": "string",
																			"format": "date-time"
																		},
																		"created_at": {
																			"type": "string",
																			"format": "date-time"
																		},
																		"backgroundImage": {
																			"type": "string"
																		},
																		"autobiography": {
																			"type": "string"
																		},
																		"icon": {
																			"type": "string"
																		},
																		"displayName": {
																			"type": "string"
																		},
																		"id": {
																			"type": "string"
																		}
																	},
																	"required": [
																		"updated_at",
																		"created_at",
																		"backgroundImage",
																		"autobiography",
																		"icon",
																		"displayName",
																		"id"
																	],
																	"type": "object"
																}
															]
														},
														"_count": {
															"properties": {
																"likes": {
																	"type": "number",
																	"format": "double"
																}
															},
															"required": [
																"likes"
															],
															"type": "object"
														}
													},
													"required": [
														"likes",
														"author",
														"_count"
													],
													"type": "object"
												},
												{
													"properties": {
														"parentCommentId": {
															"type": "string"
														},
														"authorId": {
															"type": "string"
														},
														"content": {
															"type": "string"
														},
														"postId": {
															"type": "string"
														},
														"updated_at": {
															"type": "string",
															"format": "date-time"
														},
														"created_at": {
															"type": "string",
															"format": "date-time"
														},
														"id": {
															"type": "string"
														}
													},
													"required": [
														"parentCommentId",
														"authorId",
														"content",
														"postId",
														"updated_at",
														"created_at",
														"id"
													],
													"type": "object"
												}
											]
										},
										{
											"properties": {
												"parentCommentId": {
													"type": "string"
												},
												"authorId": {
													"type": "string"
												},
												"content": {
													"type": "string"
												},
												"postId": {
													"type": "string"
												},
												"updated_at": {
													"type": "string",
													"format": "date-time"
												},
												"created_at": {
													"type": "string",
													"format": "date-time"
												},
												"id": {
													"type": "string"
												},
												"likes": {
													"items": {
														"properties": {
															"commentId": {
																"type": "string"
															},
															"postId": {
																"type": "string"
															},
															"userProfileId": {
																"type": "string"
															},
															"created_at": {
																"type": "string",
																"format": "date-time"
															},
															"id": {
																"type": "string"
															}
														},
														"required": [
															"commentId",
															"postId",
															"userProfileId",
															"created_at",
															"id"
														],
														"type": "object"
													},
													"type": "array"
												},
												"_count": {
													"properties": {
														"likes": {
															"type": "number",
															"format": "double"
														}
													},
													"required": [
														"likes"
													],
													"type": "object"
												},
												"likesCount": {
													"type": "number",
													"format": "double"
												},
												"isLiked": {
													"type": "boolean"
												},
												"author": {
													"properties": {
														"user": {
															"properties": {
																"created_at": {
																	"type": "string"
																},
																"verified": {
																	"type": "boolean"
																},
																"email": {
																	"type": "string"
																},
																"username": {
																	"type": "string"
																},
																"id": {
																	"type": "string"
																}
															},
															"required": [
																"created_at",
																"verified",
																"email",
																"username",
																"id"
															],
															"type": "object"
														},
														"links": {
															"items": {
																"properties": {
																	"postId": {
																		"type": "string"
																	},
																	"url": {
																		"type": "string"
																	},
																	"userProfileId": {
																		"type": "string"
																	},
																	"id": {
																		"type": "string"
																	}
																},
																"required": [
																	"postId",
																	"url",
																	"userProfileId",
																	"id"
																],
																"type": "object"
															},
															"type": "array"
														},
														"backgroundImage": {
															"type": "string"
														},
														"autobiography": {
															"type": "string"
														},
														"displayName": {
															"type": "string"
														},
														"icon": {
															"type": "string"
														},
														"id": {
															"type": "string"
														}
													},
													"required": [
														"user",
														"links",
														"backgroundImage",
														"autobiography",
														"displayName",
														"icon",
														"id"
													],
													"type": "object"
												}
											},
											"required": [
												"parentCommentId",
												"authorId",
												"content",
												"postId",
												"updated_at",
												"created_at",
												"id",
												"likes",
												"_count",
												"likesCount",
												"isLiked",
												"author"
											],
											"type": "object"
										}
									]
								}
							}
						}
					}
				},
				"description": "Find a comment of the platform by id",
				"tags": [
					"Comment"
				],
				"security": [
					{
						"jwt": []
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "commentId",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/api/v1/auth/signup": {
			"post": {
				"operationId": "Signup",
				"responses": {
					"201": {
						"description": "",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					}
				},
				"description": "Signup the user in the system",
				"tags": [
					"Authentication"
				],
				"security": [],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/AuthInput"
							}
						}
					}
				}
			}
		},
		"/api/v1/auth/signin": {
			"post": {
				"operationId": "Signin",
				"responses": {
					"200": {
						"description": "",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					}
				},
				"description": "Signin the user in the system",
				"tags": [
					"Authentication"
				],
				"security": [],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/Pick_AuthInput.email-or-password_"
							}
						}
					}
				}
			}
		},
		"/api/v1/auth/send-recover-email": {
			"post": {
				"operationId": "SendRecoverEmail",
				"responses": {
					"200": {
						"description": "",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					}
				},
				"description": "Send recover email to change the password of an user of the system",
				"tags": [
					"Authentication"
				],
				"security": [],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"properties": {
									"email": {
										"type": "string"
									}
								},
								"required": [
									"email"
								],
								"type": "object"
							}
						}
					}
				}
			}
		},
		"/api/v1/auth/verify-email-code": {
			"post": {
				"operationId": "VerifyEmailCode",
				"responses": {
					"200": {
						"description": "",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					}
				},
				"description": "Verify recover email code to change the password of an user of the system",
				"tags": [
					"Authentication"
				],
				"security": [],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"properties": {
									"email": {
										"type": "string"
									},
									"code": {
										"type": "string"
									}
								},
								"required": [
									"email",
									"code"
								],
								"type": "object"
							}
						}
					}
				}
			}
		},
		"/api/v1/auth/change-password": {
			"post": {
				"operationId": "ChangePassword",
				"responses": {
					"200": {
						"description": "",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					}
				},
				"description": "Change password of an user of the system",
				"tags": [
					"Authentication"
				],
				"security": [
					{
						"jwt": []
					}
				],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"properties": {
									"password": {
										"type": "string"
									}
								},
								"required": [
									"password"
								],
								"type": "object"
							}
						}
					}
				}
			}
		},
		"/api/v1/auth/refresh-token": {
			"post": {
				"operationId": "RefreshToken",
				"responses": {
					"200": {
						"description": "",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					}
				},
				"description": "Refresh the user session in the system",
				"tags": [
					"Authentication"
				],
				"security": [],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"properties": {
									"token": {
										"type": "string"
									}
								},
								"required": [
									"token"
								],
								"type": "object"
							}
						}
					}
				}
			}
		},
		"/api/v1/auth/callback/{provider}": {
			"get": {
				"operationId": "CallbackSocialLoginGet",
				"responses": {
					"200": {
						"description": ""
					}
				},
				"description": "Callback to the app to get the social login",
				"tags": [
					"Authentication"
				],
				"security": [],
				"parameters": [
					{
						"in": "path",
						"name": "provider",
						"required": true,
						"schema": {
							"type": "string",
							"enum": [
								"google",
								"linkedin",
								"github"
							]
						}
					},
					{
						"in": "query",
						"name": "code",
						"required": false,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "state",
						"required": false,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/api/v1/auth/social-login/{provider}": {
			"post": {
				"operationId": "SocialLogin",
				"responses": {
					"200": {
						"description": "",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					}
				},
				"description": "Signin or Signup the user in the system with a social login",
				"tags": [
					"Authentication"
				],
				"security": [],
				"parameters": [
					{
						"in": "path",
						"name": "provider",
						"required": true,
						"schema": {
							"type": "string",
							"enum": [
								"google",
								"linkedin",
								"github"
							]
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"properties": {
									"token": {
										"type": "string"
									}
								},
								"required": [
									"token"
								],
								"type": "object"
							}
						}
					}
				}
			}
		},
		"/api/v1/auth/link-new-oauth-provider/{provider}": {
			"post": {
				"operationId": "LinkNewOAuthProvider",
				"responses": {
					"200": {
						"description": "",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					}
				},
				"description": "Link another oauth provider to your account",
				"tags": [
					"Authentication"
				],
				"security": [
					{
						"jwt": []
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "provider",
						"required": true,
						"schema": {
							"type": "string",
							"enum": [
								"google",
								"linkedin",
								"github"
							]
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"properties": {
									"token": {
										"type": "string"
									}
								},
								"required": [
									"token"
								],
								"type": "object"
							}
						}
					}
				}
			}
		},
		"/api/v1/follow": {
			"post": {
				"operationId": "Follow",
				"responses": {
					"200": {
						"description": "",
						"content": {
							"application/json": {
								"schema": {
									"anyOf": [
										{
											"properties": {
												"followerUserId": {
													"type": "string"
												},
												"followingUserId": {
													"type": "string"
												},
												"followingTeamId": {
													"type": "string"
												},
												"created_at": {
													"type": "string",
													"format": "date-time"
												},
												"id": {
													"type": "string"
												}
											},
											"required": [
												"followerUserId",
												"followingUserId",
												"followingTeamId",
												"created_at",
												"id"
											],
											"type": "object"
										},
										{
											"type": "string",
											"enum": [
												"YOU_CANT_FOLLOW_BOTH_OR_NONE",
												"YOU_CANT_FOLLOW_YOURSELF",
												"ALREADY_FOLLOWING",
												"YOU_MUST_UNFOLLOW_EITHER_USER_OR_TEAM",
												"YOU_CANT_UNFOLLOW_YOURSELF",
												"FOLLOW_NOT_FOUND"
											]
										}
									]
								}
							}
						}
					}
				},
				"description": "Follow an user of the system",
				"tags": [
					"Follow"
				],
				"security": [
					{
						"jwt": []
					}
				],
				"parameters": [
					{
						"in": "query",
						"name": "wantFollow",
						"required": true,
						"schema": {
							"type": "boolean"
						}
					},
					{
						"in": "query",
						"name": "followingTeamId",
						"required": false,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "followingUserId",
						"required": false,
						"schema": {
							"type": "string"
						}
					}
				]
			},
			"get": {
				"operationId": "FindAll",
				"responses": {
					"204": {
						"description": "",
						"content": {
							"application/json": {
								"schema": {
									"anyOf": [
										{
											"items": {},
											"type": "array"
										},
										{
											"properties": {
												"data": {
													"items": {},
													"type": "array"
												},
												"total": {
													"type": "number",
													"format": "double"
												},
												"pages": {
													"type": "number",
													"format": "double"
												},
												"nextPage": {
													"type": "number",
													"format": "double"
												},
												"page": {
													"type": "number",
													"format": "double"
												}
											},
											"required": [
												"data",
												"total",
												"pages",
												"nextPage",
												"page"
											],
											"type": "object"
										}
									]
								}
							}
						}
					}
				},
				"description": "Get all follows of an user of the system",
				"tags": [
					"Follow"
				],
				"security": [
					{
						"jwt": []
					}
				],
				"parameters": [
					{
						"in": "query",
						"name": "page",
						"required": true,
						"schema": {
							"format": "double",
							"type": "number"
						}
					},
					{
						"in": "query",
						"name": "quantity",
						"required": true,
						"schema": {
							"format": "double",
							"type": "number"
						}
					},
					{
						"in": "query",
						"name": "followType",
						"required": true,
						"schema": {
							"type": "string",
							"enum": [
								"followers:user",
								"followers:team",
								"following"
							]
						}
					}
				]
			}
		},
		"/api/v1/view": {
			"post": {
				"operationId": "ViewPost",
				"responses": {
					"200": {
						"description": ""
					}
				},
				"description": "View a post of the system",
				"tags": [
					"View"
				],
				"security": [
					{
						"jwt": []
					}
				],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"properties": {
									"posts": {
										"items": {
											"type": "string"
										},
										"type": "array"
									}
								},
								"required": [
									"posts"
								],
								"type": "object"
							}
						}
					}
				}
			}
		}
	},
	"servers": [
		{
			"url": "/"
		}
	]
}